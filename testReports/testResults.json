{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2025-09-10T15:38:05.251Z",
    "end": "2025-09-10T15:38:07.654Z",
    "duration": 2403,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1b0572ae-a1a7-4bd8-be72-774198bd3f7d",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9ef87ece-601c-4b13-9cdd-fdf30c730821",
          "title": "add todo tests",
          "fullFile": "/Users/home/repos/selenium/test/firstTest.js",
          "file": "/test/firstTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds a todo to the application",
              "fullTitle": "add todo tests successfully adds a todo to the application",
              "timedOut": null,
              "duration": 2075,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// launch browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n// navigate to app\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n// add a to-do\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"Learn Selenium\", Key.RETURN);\n// quick check\nlet lastItem = await driver.findElement(By.xpath(\"//li[last()]\"));\nconsole.log(await lastItem.getText());\n// assert\nlet todoText = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n// assert using chai should\ntodoText.should.equal(\"Learn Selenium\");\n// close browser\nawait driver.quit();",
              "err": {},
              "uuid": "2558d959-90b7-4a62-9f9e-1595305a1f1f",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2558d959-90b7-4a62-9f9e-1595305a1f1f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2075,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "e020d377-4a5d-4337-8284-8dcafab8000b",
          "title": "add another todo test",
          "fullFile": "/Users/home/repos/selenium/test/secondTest.js",
          "file": "/test/secondTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds another todo to the application",
              "fullTitle": "add another todo test successfully adds another todo to the application",
              "timedOut": null,
              "duration": 2251,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// launch browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n// navigate to app\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n// add a to-do\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"Learn Selenium\", Key.RETURN);\n// assert\nlet todoText = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n// assert using chai should\ntodoText.should.equal(\"Learn Selenium\");\n// close browser\nawait driver.quit();",
              "err": {},
              "uuid": "4a6d551f-d952-449d-bb20-8bec12a577da",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4a6d551f-d952-449d-bb20-8bec12a577da"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2251,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testResults",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "/Users/home/repos/selenium/testReports",
        "reportFilename": "testResults"
      },
      "version": "6.2.0"
    }
  }
}